<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Глитчи Юниверси - Квантовая Суперпозиция</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700&family=Rajdhani:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="styles.css" rel="stylesheet">
    <style>
        .glitch-page {
            background: linear-gradient(135deg, var(--dark-bg) 0%, var(--light-bg) 100%);
            min-height: 100vh;
            padding: 2rem 0;
        }

        .glitch-content {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .glitch-title {
            font-size: 3rem;
            margin-bottom: 2rem;
            position: relative;
            display: inline-block;
        }

        .glitch-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 100%;
            height: 3px;
            background: var(--accent-color);
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .glitch-title:hover::after {
            transform: scaleX(1);
        }

        .glitch-section {
            margin-bottom: 3rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }

        .glitch-section.animate-fade-in {
            opacity: 1;
            transform: translateY(0);
        }

        .glitch-number {
            font-size: 5rem;
            font-weight: bold;
            color: var(--accent-color);
            opacity: 0.2;
            position: absolute;
            right: 2rem;
            top: 2rem;
            z-index: -1;
        }

        .superposition-experiment {
            position: relative;
            width: 100%;
            height: 300px;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            overflow: hidden;
            margin: 2rem 0;
        }

        .qubit {
            position: absolute;
            width: 20px;
            height: 20px;
            background: var(--primary-color);
            border-radius: 50%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            transition: all 1s ease-in-out;
        }

        .qubit.superposed {
            background: var(--accent-color);
            box-shadow: 0 0 20px var(--accent-color);
        }

        .state-indicator {
            position: absolute;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(255, 255, 255, 0.1);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .state-indicator.visible {
            opacity: 1;
        }

        .experiment-controls {
            display: flex;
            gap: 1rem;
            margin: 1rem 0;
        }

        .experiment-stats {
            display: flex;
            justify-content: space-between;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            margin-top: 1rem;
        }

        .navigation-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 2rem;
        }

        .navigation-buttons a {
            padding: 0.5rem 1.5rem;
            border-radius: 25px;
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .navigation-buttons a:hover {
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
{% include "partials/nav_bug.njk" %}

    <main class="glitch-page">
        <div class="container">
            <div class="glitch-content">
                <h1 class="glitch-title glitch-text" data-text="Квантовая суперпозиция">Квантовая суперпозиция</h1>
                <div class="glitch-number">05</div>

                <div class="glitch-section">
                    <h2>Введение</h2>
                    <p>Квантовая суперпозиция - это фундаментальный принцип квантовой механики, согласно которому квантовая система может находиться одновременно в нескольких состояниях до момента измерения. Это явление лежит в основе многих парадоксов квантовой механики.</p>
                </div>

                <div class="glitch-section">
                    <h2>Кот Шрёдингера</h2>
                    <p>Мысленный эксперимент с котом Шрёдингера иллюстрирует принцип суперпозиции. Кот находится в суперпозиции состояний "жив" и "мёртв" до тех пор, пока не будет произведено измерение. Это показывает, как квантовые эффекты могут проявляться на макроскопическом уровне.</p>
                </div>

                <div class="glitch-section">
                    <h2>Интерактивный эксперимент</h2>
                    <div class="superposition-experiment" id="superposition-experiment">
                        <div class="qubit"></div>
                        <div class="state-indicator">Состояние: <span id="state-value">-</span></div>
                    </div>
                    <div class="experiment-controls">
                        <button class="btn btn-primary" id="create-superposition">Создать суперпозицию</button>
                        <button class="btn btn-primary" id="measure-state">Измерить состояние</button>
                        <button class="btn btn-secondary" id="reset-superposition">Сбросить</button>
                    </div>
                    <div class="experiment-stats">
                        <div>Измерения |0⟩: <span id="zero-measurements">0</span></div>
                        <div>Измерения |1⟩: <span id="one-measurements">0</span></div>
                    </div>
                </div>

                <div class="glitch-section">
                    <h2>Применение в квантовых вычислениях</h2>
                    <p>Суперпозиция является основой квантовых вычислений:</p>
                    <ul>
                        <li>Квантовые биты (кубиты) могут находиться в суперпозиции</li>
                        <li>Позволяет выполнять параллельные вычисления</li>
                        <li>Используется в квантовых алгоритмах</li>
                        <li>Лежит в основе квантовой криптографии</li>
                    </ul>
                </div>

                <div class="navigation-buttons">
                    <a href="reality_bug_04_quantum_teleportation.html" class="btn btn-outline-primary">← Квантовая телепортация</a>
                    <a href="index.html" class="btn btn-outline-secondary">На главную</a>
                    <a href="reality_bug_06_quantum_decoherence.html" class="btn btn-outline-primary">Квантовая декогеренция →</a>
                </div>
            </div>
        </div>
    </main>

    <footer class="footer mt-auto py-3">
        <div class="container text-center">
            <span class="text-muted">© 2024 Глитчи Юниверси. Все права защищены.</span>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="scripts.js"></script>
    <script>
        // Специфичный код для эксперимента с квантовой суперпозицией
        document.addEventListener('DOMContentLoaded', () => {
            const qubit = document.querySelector('.qubit');
            const stateIndicator = document.querySelector('.state-indicator');
            const stateValue = document.getElementById('state-value');
            const createSuperpositionBtn = document.getElementById('create-superposition');
            const measureStateBtn = document.getElementById('measure-state');
            const resetBtn = document.getElementById('reset-superposition');
            const zeroMeasurements = document.getElementById('zero-measurements');
            const oneMeasurements = document.getElementById('one-measurements');
            
            let isSuperposed = false;
            let zeroCount = 0;
            let oneCount = 0;

            createSuperpositionBtn.addEventListener('click', () => {
                if (!isSuperposed) {
                    qubit.classList.add('superposed');
                    isSuperposed = true;
                    stateIndicator.classList.remove('visible');
                }
            });

            measureStateBtn.addEventListener('click', () => {
                if (isSuperposed) {
                    const state = Math.random() < 0.5 ? '|0⟩' : '|1⟩';
                    stateValue.textContent = state;
                    stateIndicator.classList.add('visible');
                    
                    if (state === '|0⟩') {
                        zeroCount++;
                    } else {
                        oneCount++;
                    }
                    
                    zeroMeasurements.textContent = zeroCount;
                    oneMeasurements.textContent = oneCount;
                    
                    qubit.classList.remove('superposed');
                    isSuperposed = false;
                }
            });

            resetBtn.addEventListener('click', () => {
                qubit.classList.remove('superposed');
                stateIndicator.classList.remove('visible');
                isSuperposed = false;
                zeroCount = 0;
                oneCount = 0;
                zeroMeasurements.textContent = '0';
                oneMeasurements.textContent = '0';
            });
        });
    </script>
</body>
</html> 
